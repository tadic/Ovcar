/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package app.gajenje_ovaca.gui.dnevnik.belezenjeAktivnosti;

import app.gajenje_ovaca.OvcaPrikaz;
import app.gajenje_ovaca.gui.dnevnik.Dnevnik;
import app.logic.Logic;
import app.model.Aktivnost;
import app.model.Jagnjenje;
import app.model.NabavkaOvaca;
import app.model.Ovca;
import apple.laf.JRSUIConstants;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.BoxLayout;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.border.Border;
import javax.swing.plaf.basic.BasicBorders;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ivantadic
 */
public class JagnjenjaPanel extends javax.swing.JPanel {

private Logic logic;
private Aktivnost aktivnost;
private JPanel mainPanel;


    public JagnjenjaPanel(JPanel mainPanel, Logic logic, Aktivnost aktivnost) {
        super();
        this.aktivnost = aktivnost;
        this.mainPanel = mainPanel;
        //this.belezenjeAktivnostiPanel = parent;
        this.logic = logic;
        initComponents();
                this.setAlignmentY(LEFT_ALIGNMENT);

        setOpaque(true);
       // jTable1.getColumnModel().getColumn(4).setCellEditor(new JDateChooserCellEditor());
       // jTable1.getColumnModel().getColumn(4).setCellRenderer(new JDateChooserRenderer());
        setPanel();
       // nabavkaPanel.setVisible(aktivnost.getVrstaAktivnosti().getName().equals("Nabavka ovaca"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jNapomena = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLokacija = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jSnimiButton = new javax.swing.JButton();
        jagnjenjePanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jNameOfActivity = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSpinField1 = new com.toedter.components.JSpinField();

        jColorLabel.setBackground(new java.awt.Color(102, 255, 102));
        jColorLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jColorLabel.setOpaque(true);

        jNapomena.setColumns(20);
        jNapomena.setForeground(new java.awt.Color(51, 51, 0));
        jNapomena.setLineWrap(true);
        jNapomena.setRows(5);
        jNapomena.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 1, true));
        jNapomena.setOpaque(false);
        jScrollPane1.setViewportView(jNapomena);

        jLabel5.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jLabel5.setText("Napomena");

        jLokacija.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLokacija.setForeground(new java.awt.Color(51, 51, 0));
        jLokacija.setText("Farma");
        jLokacija.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 1, true));
        jLokacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLokacijaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jLabel3.setText("Lokacija:");

        jButton2.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jButton2.setText("Otka≈æi");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSnimiButton.setBackground(new java.awt.Color(153, 255, 255));
        jSnimiButton.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jSnimiButton.setText("Snimi");
        jSnimiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSnimiButtonActionPerformed(evt);
            }
        });

        jagnjenjePanel.setBackground(new java.awt.Color(255, 255, 255));
        jagnjenjePanel.setOpaque(false);

        org.jdesktop.layout.GroupLayout jagnjenjePanelLayout = new org.jdesktop.layout.GroupLayout(jagnjenjePanel);
        jagnjenjePanel.setLayout(jagnjenjePanelLayout);
        jagnjenjePanelLayout.setHorizontalGroup(
            jagnjenjePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        jagnjenjePanelLayout.setVerticalGroup(
            jagnjenjePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 23, Short.MAX_VALUE)
        );

        jLabel11.setText("_________________________________________________");

        jNameOfActivity.setFont(new java.awt.Font("Monaco", 1, 24)); // NOI18N
        jNameOfActivity.setForeground(new java.awt.Color(153, 0, 0));
        jNameOfActivity.setText("Unos Jagnjenja");

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel13.setText("Broj ojagnjenih ovaca");

        jSpinField1.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        jSpinField1.setMaximum(7);
        jSpinField1.setMinimum(1);
        jSpinField1.setValue(1);
        jSpinField1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSpinField1PropertyChange(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 355, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jSnimiButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2)
                        .add(28, 28, 28))))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jColorLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jNameOfActivity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 309, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(jLabel13)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSpinField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLokacija, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(21, 21, 21))
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1062, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 0, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jagnjenjePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(15, 15, 15)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jNameOfActivity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jColorLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLokacija, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel3)))
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jSpinField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jagnjenjePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel11)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jSnimiButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
  /*  private void showComponents(boolean b){
          jsatiPocetak.setVisible(b);
          jminutaPocetak.setVisible(b);
          jminutaKraj.setVisible(b);
          jsatiKraj.setVisible(b);
          jLabel6.setVisible(b);
          jLabel7.setVisible(b);
          jLabel8.setVisible(b);
          jLabel9.setVisible(b);
    }*/
    
    private void setPanel(){
        jNameOfActivity.setText(aktivnost.getVrstaAktivnosti().getName());
        jColorLabel.setBackground(new Color(aktivnost.getVrstaAktivnosti().getColor()));
        
        jLokacija.setText(aktivnost.getLokacija());
        jNapomena.setText(aktivnost.getNapomena());
        
        //setTableRows();
        
    }

   
    private void jLokacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLokacijaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLokacijaActionPerformed

     private int pickint(JSpinner s){
        return Integer.parseInt(s.getValue().toString());
    }
     
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            mainPanel.removeAll();
            mainPanel.add(new Dnevnik(logic, mainPanel));
            mainPanel.revalidate();
            mainPanel.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void pickJagnjenja(){
        aktivnost.setLokacija(jLokacija.getText());
        aktivnost.setNapomena(jNapomena.getText());
        for (Component c: jagnjenjePanel.getComponents()){
            JagnjenjePanel jp = (JagnjenjePanel) c;
            for (Jagnjenje jagnjenje: jp.getJagnjenja()){
               aktivnost.getListaJagnjenja().add(jagnjenje); 
            }
        }
    }
    private void jSnimiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSnimiButtonActionPerformed

        pickJagnjenja();
        logic.saveActivity(aktivnost);
        mainPanel.removeAll();
        mainPanel.add(new Dnevnik(logic, mainPanel));
        mainPanel.revalidate();
        mainPanel.repaint();
    }//GEN-LAST:event_jSnimiButtonActionPerformed
/*

    private ArrayList<NabavkaOvaca> createListOfNabavka(int n){
        ArrayList<NabavkaOvaca> list = new ArrayList<NabavkaOvaca>();
        for (int i=0; i<n; i++){
            list.add(new NabavkaOvaca());
        }
        return list;
        
    }
    private void pickSveNabavke(){
        int listSize = jTable1.getRowCount();
        if (aktivnost.getId()==null){
            aktivnost.setNabavljenaGrla(createListOfNabavka(listSize));
        }
        for (int i=0; i<listSize; i++){
            pickNabavka(i);   
        }            

    }
    

    private void pickNabavka(int n){
        TableModel table = jTable1.getModel();

        aktivnost.getNabavljenaGrla().get(n).setCena(table.getValueAt(n, 7));
        aktivnost.getNabavljenaGrla().get(n).setNapomena(table.getValueAt(n, 9));
        aktivnost.getNabavljenaGrla().get(n).setSheep(pickOvca(table, n));    
    }

    private void pickOtac(Ovca ovca, TableModel table, int n){
        ovca.setOtac(new Ovca("zamisljena", "nepoznat", 'm'));
        if (table.getValueAt(n, 5)!=null){
            if (table.getValueAt(n, 5).toString().length()>0){
                ovca.getOtac().setOznaka(table.getValueAt(n, 5));
            }
        }
    }
    private void pickMajka(Ovca ovca, TableModel table, int n){
        ovca.setMajka(new Ovca("zamisljena", "nepoznata", '≈æ'));
        if (table.getValueAt(n, 6)!=null){
             if (table.getValueAt(n, 6).toString().length()>0){
                    ovca.getMajka().setOznaka(table.getValueAt(n, 6));
             }
        }
    }
    
    private Ovca pickOvca(TableModel table, int n){
        Ovca ovca = new Ovca("na farmi");
        if (aktivnost.getId()!=null){
            ovca.setId(aktivnost.getNabavljenaGrla().get(n).getSheep().getId());
        }
        ovca.setPol(table.getValueAt(n, 1));
        ovca.setOznaka(table.getValueAt(n, 2));
        ovca.setProcenatR(table.getValueAt(n, 3));
        ovca.setDatumRodjenja(table.getValueAt(n, 4));
        pickOtac(ovca, table, n);
        pickMajka(ovca, table, n);
        ovca.setOpis(table.getValueAt(n, 8));
        ovca.setLeglo(table.getValueAt(n, 10));
        return ovca;
    }
    private void pickDataFromForm(){
        aktivnost.setLokacija(jLokacija.getText());
        aktivnost.setNapomena(jNapomena.getText());
        pickSveNabavke();
    }
*/
    private void jSpinField1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSpinField1PropertyChange

        int n = jSpinField1.getValue();
        if (n>0){
            if (jagnjenjePanel.getComponents().length>n){
                jagnjenjePanel.remove(n);
            } else {
                //mainPanel.setPreferredSize(new Dimension(1000, 1999));
                jagnjenjePanel.setLayout(new BoxLayout(jagnjenjePanel, BoxLayout.Y_AXIS));
                //jagnjenjePanel.setAlignmentY(LEFT_ALIGNMENT);
                jagnjenjePanel.add(new JagnjenjePanel(null, logic, this));
            }
            jagnjenjePanel.revalidate();
            //System.out.println("broj panela: " + jagnjenjePanel.getComponents().length);
            jagnjenjePanel.repaint();
        }    
    }//GEN-LAST:event_jSpinField1PropertyChange
/*       
    private void setTableRows(){
        if (aktivnost.getNabavljenaGrla()!=null){

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int i=1;
            for (NabavkaOvaca no: aktivnost.getNabavljenaGrla()){
                model.addRow(vectorFrom(no, i++));
            }
        }
    }*/

    private Vector vectorFrom(NabavkaOvaca no, int n){
        Ovca o = logic.getOvca(no.getSheep().getId());
        no.setSheep(o);
        Vector v = new Vector();
        v.add(n);
        v.add(o.getPol());
        v.add(o.getOznaka());
        v.add(o.getProcenatR());
        v.add(o.getDatumRodjenja());      
        if (o.getOtac()!=null){
             v.add(o.getOtac().getOznaka());
        } else {
            v.add(null);
        }
               
        if (o.getMajka()!=null){
             v.add(o.getMajka().getOznaka());
        } else {
            v.add(null);
        }
        v.add(no.getCena());
        v.add(o.getOpis());
        v.add(no.getNapomena());
        v.add(o.getLeglo());
        return v;
    }
    public void smanjiSvePaneleJagnjenja(){
        for (Component c: jagnjenjePanel.getComponents()){
            JagnjenjePanel jp = (JagnjenjePanel) c;
            jp.smanjiSe();
        }
    }
    
    @Override  
    public void paintComponent(Graphics g) {  

        super.paintComponent(g);  
        Graphics2D g2d = (Graphics2D) g;  
        int w = getWidth();  
        int h = getHeight();  
     
        g2d.setColor(Color.white);
        g2d.fillRoundRect(0, 0, w, h, 20, 20);
        g2d.setColor(Color.gray);
        g2d.drawRoundRect(0, 0, w, h, 20, 20);

        g2d.setStroke(new BasicStroke());
        Border border = new BasicBorders.MarginBorder();
        
        this.setBorder(border);
        //g2d.fillRect(0, 0, w, h);  
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jColorLabel;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jLokacija;
    private javax.swing.JLabel jNameOfActivity;
    private javax.swing.JTextArea jNapomena;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSnimiButton;
    private com.toedter.components.JSpinField jSpinField1;
    private javax.swing.JPanel jagnjenjePanel;
    // End of variables declaration//GEN-END:variables
}
