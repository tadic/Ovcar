/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package app.editPanels;

import app.helpers.ColorColumnRenderer;
import app.mainPanels.Dnevnik;
import app.logic.Logic;
import app.model.Aktivnost;
import app.model.Dan;
import app.model.Ovca;
import app.model.Vakcinacija;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author ivantadic
 */
public class VakcinacijaPanel extends javax.swing.JPanel {

private Logic logic;
private Aktivnost aktivnost;
private JPanel mainPanel;
    private TableRowSorter<TableModel> sorter;


    public VakcinacijaPanel(JPanel mainP, Logic logic, Aktivnost aktivnost) {
        super();
        this.aktivnost = aktivnost;
        this.mainPanel = mainP;
        this.logic = logic;
        initComponents();
        setOpaque(true);

        setPanel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jredovno = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jminutaPocetak = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jminutaKraj = new javax.swing.JSpinner();
        jsatiKraj = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jColorLabel = new javax.swing.JLabel();
        jsatiPocetak = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jNapomena = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLokacija = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jSnimiButton = new javax.swing.JButton();
        nabavkaPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jCounter = new javax.swing.JLabel();
        jSelekcija = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jNameOfActivity = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextTroskovi = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jRazlog = new javax.swing.JTextField();
        jSredstvo = new javax.swing.JTextField();
        jDatum = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();

        jLabel7.setText("do:");

        jminutaPocetak.setModel(new javax.swing.SpinnerListModel(new String[] {"00", "15", "30", "45"}));
        jminutaPocetak.setAutoscrolls(true);
        jminutaPocetak.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jminutaPocetakStateChanged(evt);
            }
        });

        jLabel8.setText("-");

        jLabel9.setText("-");

        jLabel6.setText("od:");

        jminutaKraj.setModel(new javax.swing.SpinnerListModel(new String[] {"00", "15", "30", "45"}));
        jminutaKraj.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jminutaKrajStateChanged(evt);
            }
        });

        jsatiKraj.setModel(new javax.swing.SpinnerListModel(new String[] {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"}));
        jsatiKraj.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsatiKrajStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jLabel2.setText("Trajanje");

        jColorLabel.setBackground(new java.awt.Color(102, 255, 102));
        jColorLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jColorLabel.setOpaque(true);

        jsatiPocetak.setModel(new javax.swing.SpinnerListModel(new String[] {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22"}));
        jsatiPocetak.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsatiPocetakStateChanged(evt);
            }
        });

        jNapomena.setColumns(20);
        jNapomena.setForeground(new java.awt.Color(51, 51, 0));
        jNapomena.setLineWrap(true);
        jNapomena.setRows(5);
        jNapomena.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 1, true));
        jNapomena.setOpaque(false);
        jScrollPane1.setViewportView(jNapomena);

        jLabel5.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jLabel5.setText("Napomena");

        jLokacija.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLokacija.setForeground(new java.awt.Color(51, 51, 0));
        jLokacija.setText("Farma");
        jLokacija.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 1, true));
        jLokacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLokacijaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jLabel3.setText("Lokacija:");

        jButton2.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jButton2.setText("Otkaži");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSnimiButton.setBackground(new java.awt.Color(153, 255, 255));
        jSnimiButton.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jSnimiButton.setText("Snimi");
        jSnimiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSnimiButtonActionPerformed(evt);
            }
        });

        nabavkaPanel.setBackground(new java.awt.Color(255, 255, 255));
        nabavkaPanel.setOpaque(false);

        jLabel13.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel13.setText("Vakcinisano/Lečeno");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nadimak", "oznaka", "pol", "starost", "napomena", "aktuelno", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setRowHeight(30);
        jTable1.setRowMargin(0);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setUpdateSelectionOnSort(false);
        jScrollPane2.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(5);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);

        jLabel10.setText("_________________________________________________");

        jCounter.setFont(new java.awt.Font("Monaco", 1, 24)); // NOI18N
        jCounter.setForeground(new java.awt.Color(204, 0, 51));
        jCounter.setText("9");

        jSelekcija.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jSelekcijaKeyReleased(evt);
            }
        });

        jButton3.setText(">");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("<");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel14.setText("Filter");

        jList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Grlo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jList.setColumnSelectionAllowed(true);
        jScrollPane4.setViewportView(jList);
        jList.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList.getColumnModel().getColumn(0).setResizable(false);

        jButton5.setText("<<");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText(">>");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout nabavkaPanelLayout = new org.jdesktop.layout.GroupLayout(nabavkaPanel);
        nabavkaPanel.setLayout(nabavkaPanelLayout);
        nabavkaPanelLayout.setHorizontalGroup(
            nabavkaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(nabavkaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(nabavkaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(nabavkaPanelLayout.createSequentialGroup()
                        .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 345, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(nabavkaPanelLayout.createSequentialGroup()
                        .add(nabavkaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(nabavkaPanelLayout.createSequentialGroup()
                                .add(jLabel14)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jSelekcija))
                            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 177, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(nabavkaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(nabavkaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(nabavkaPanelLayout.createSequentialGroup()
                                .add(jLabel13)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jCounter))
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 886, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        nabavkaPanelLayout.setVerticalGroup(
            nabavkaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, nabavkaPanelLayout.createSequentialGroup()
                .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(7, 7, 7)
                .add(nabavkaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(jCounter)
                    .add(jLabel14)
                    .add(jSelekcija, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(nabavkaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(nabavkaPanelLayout.createSequentialGroup()
                        .add(29, 29, 29)
                        .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setText("_________________________________________________");

        jNameOfActivity.setFont(new java.awt.Font("Monaco", 1, 24)); // NOI18N
        jNameOfActivity.setForeground(new java.awt.Color(153, 0, 0));
        jNameOfActivity.setText("Hranjenje");

        jLabel18.setFont(new java.awt.Font("Monaco", 0, 18)); // NOI18N
        jLabel18.setText("Ukupan trošak (€):");

        jTextTroskovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextTroskoviActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Monaco", 0, 18)); // NOI18N
        jLabel20.setText("Razlog:");

        jLabel21.setFont(new java.awt.Font("Monaco", 0, 18)); // NOI18N
        jLabel21.setText("Sredstvo:");

        jRazlog.setFont(new java.awt.Font("Monaco", 0, 18)); // NOI18N
        jRazlog.setForeground(new java.awt.Color(51, 51, 0));
        jRazlog.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 1, true));
        jRazlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRazlogActionPerformed(evt);
            }
        });

        jSredstvo.setFont(new java.awt.Font("Monaco", 0, 18)); // NOI18N
        jSredstvo.setForeground(new java.awt.Color(51, 51, 0));
        jSredstvo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 1, true));
        jSredstvo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSredstvoActionPerformed(evt);
            }
        });

        jDatum.setDateFormatString("dd.MM.yyyy");

        jLabel1.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        jLabel1.setText("Datum");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jColorLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jNameOfActivity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 309, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel20)
                            .add(jLabel21))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jSredstvo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 732, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jRazlog, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 732, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jsatiPocetak, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel8)
                        .add(1, 1, 1)
                        .add(jminutaPocetak, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(13, 13, 13)
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jsatiKraj, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel9)
                        .add(1, 1, 1)
                        .add(jminutaKraj, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel18)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextTroskovi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLokacija, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(18, 18, 18)
                        .add(jDatum, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(18, 18, 18))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 355, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jSnimiButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2)
                        .add(28, 28, 28))))
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel5)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jScrollPane1))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(nabavkaPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jNameOfActivity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jColorLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jDatum, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLokacija, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel3))))
                .add(31, 31, 31)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jminutaPocetak, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(jLabel8))
                    .add(jsatiPocetak, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(4, 4, 4)
                        .add(jLabel7))
                    .add(layout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jminutaKraj, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(5, 5, 5)
                                .add(jLabel9))
                            .add(jsatiKraj, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel2)
                        .add(jLabel6))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel18)
                        .add(jTextTroskovi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel20)
                    .add(jRazlog, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel21)
                    .add(jSredstvo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(nabavkaPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(jLabel11)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jSnimiButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private DefaultListModel getModelFromList(){
       DefaultListModel model = new DefaultListModel<Ovca>();
       for (Ovca o: logic.getSvaZivaGrla()){
           model.addElement(o);
       }
       return model;
    }
    
    private void setPanel(){
        jNameOfActivity.setText(aktivnost.getVrstaAktivnosti().getName());
        jColorLabel.setBackground(new Color(aktivnost.getVrstaAktivnosti().getColor()));
        jsatiPocetak.setValue(convertHours(aktivnost.pocetakUSatima()));
        jminutaPocetak.setValue(convertHours(aktivnost.pocetakMinuta()));
        jsatiKraj.setValue(convertHours(aktivnost.zavrsetakUSatima()));
        jminutaKraj.setValue(convertHours(aktivnost.zavrsetakMinuta()));
        jLokacija.setText(aktivnost.getLokacija());
        jNapomena.setText(aktivnost.getNapomena());
        jTextTroskovi.setText(Float.toString(aktivnost.getTroskovi()));
        jDatum.setCalendar(aktivnost.getDan().getDate());

//setTableRows();
        paintColumns();
        resetTable(logic.getSvaZivaGrla());
        if (aktivnost.getVakcinacije()!=null && !aktivnost.getVakcinacije().isEmpty()){
            jRazlog.setText(aktivnost.getVakcinacije().get(0).getRazlog());
            jSredstvo.setText(aktivnost.getVakcinacije().get(0).getSredstvo());
            fillTable(aktivnost.getVakcinacije(), jTable1);
        } else {
            jLokacija.setText("s.Jasenica");
            jCounter.setText("("+ jTable1.getRowCount() + ")");
        }
        
    }

    private void fillTable(List<Vakcinacija> vakcinacije, JTable table){
             DefaultTableModel model = (DefaultTableModel) table.getModel();
            for (int i=0; i<vakcinacije.size(); i++){
                model.addRow(vector2From(vakcinacije.get(i).getOvca()));
                model.setValueAt(vakcinacije.get(i).getNapomena(), i, 4);
            }
            jCounter.setText("("+ jTable1.getRowCount() + ")");
    }

    private void paintColumns(){
        for (int i=4; i<5; i++){
             TableColumn tm = jTable1.getColumnModel().getColumn(i);
             tm.setCellRenderer(new ColorColumnRenderer(new Color(((i%2)*217 + 255)%256, ((i%2)*217 + 255)%256,((i%2)*217 + 255)%256),Color.DARK_GRAY));
        }
    }
    
    private List<RowFilter<TableModel,Object>> getFilters(){
         List<RowFilter<TableModel,Object>> filters = new ArrayList<RowFilter<TableModel,Object>>();
         RowFilter<TableModel, Object> filter1 = RowFilter.regexFilter(jSelekcija.getText());
         filters.add(filter1);

         return filters;
    }
    private void resetTable(List<Ovca> list){
        DefaultTableModel model = (DefaultTableModel) jList.getModel();

        sorter = new TableRowSorter<TableModel>(model);
        jList.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.andFilter(getFilters()));
        model.setRowCount(0);
        for (Ovca o: list){
            model.addRow(vectorFrom(o));
        }
        jCounter.setText("("+ jTable1.getRowCount() + ")");
       
    }
    private void keepTimePositive(){
        int vremePocetka =   pickint(jsatiPocetak)*100 + pickint(jminutaPocetak);
        int vremeZavrsetka = pickint(jsatiKraj)*100 + pickint(jminutaKraj);
        int trajanje = vremeZavrsetka-vremePocetka;
        if (trajanje <= 0){
            jsatiKraj.setValue(convertHours(pickint(jsatiPocetak)+1));
            jminutaKraj.setValue(convertHours(pickint(jminutaPocetak)));
        }
    }
    private void jsatiPocetakStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsatiPocetakStateChanged
        keepTimePositive();
    }//GEN-LAST:event_jsatiPocetakStateChanged
  private String convertHours(int h){
        if (h<10){
            return "0" + h;
        } 
        return "" + h;
    }
    private void jLokacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLokacijaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLokacijaActionPerformed

     private int pickint(JSpinner s){
        return Integer.parseInt(s.getValue().toString());
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            mainPanel.removeAll();
            mainPanel.add(new Dnevnik(logic, mainPanel));
            mainPanel.revalidate();
            repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jSnimiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSnimiButtonActionPerformed
        if (pickDataFromForm()){
            logic.saveActivity(aktivnost);
            mainPanel.removeAll();
            mainPanel.add(new Dnevnik(logic, mainPanel));
            mainPanel.revalidate();
            repaint();
        }    
    }//GEN-LAST:event_jSnimiButtonActionPerformed

    private List<Vakcinacija> pickSveVakcinacije(){
        List<Vakcinacija> list = new ArrayList<Vakcinacija>(); 
        DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
       // System.out.println("sve prodaja velicina tabele: " + table.getRowCount());
        for (int i=0; i<table.getRowCount(); i++){
            //System.out.println(Boolean.getBoolean(table.getValueAt(i, 10).toString()));
                list.add(pickVakcinacija(table, i));
        }
        System.out.println("sve prodaja velicina liste: " + list.size());
        return list;
    }
    

    private Vakcinacija pickVakcinacija(DefaultTableModel table, int n){
        Vakcinacija v = new Vakcinacija();
        Ovca o = logic.getOvca(Integer.parseInt(table.getValueAt(n, 6).toString()));
        v.setRazlog(jRazlog.getText());
        v.setSredstvo(jSredstvo.getText());
        v.setNapomena(table.getValueAt(n, 4));
        v.setOvca(o);
        return v;
    }


    private boolean pickDataFromForm(){
        aktivnost.setVakcinacije(pickSveVakcinacije());
        if (aktivnost.getVakcinacije().isEmpty()){
            return false;
        } 
        aktivnost.setVremePocetka(pickint(jsatiPocetak)*100 + pickint(jminutaPocetak));
        aktivnost.setVremeZavrsetka(pickint(jsatiKraj)*100 + pickint(jminutaKraj));
        aktivnost.setLokacija(jLokacija.getText());
        aktivnost.setTroskovi(jTextTroskovi.getText());
        aktivnost.setNapomena(jNapomena.getText());
        aktivnost.setDan(new Dan(jDatum.getCalendar()));
        aktivnost.setBilans(createBilans());
        return true;
    }

    private void jminutaPocetakStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jminutaPocetakStateChanged
        keepTimePositive();
    }//GEN-LAST:event_jminutaPocetakStateChanged

    private void jsatiKrajStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsatiKrajStateChanged
        keepTimePositive();  
    }//GEN-LAST:event_jsatiKrajStateChanged

    private void jminutaKrajStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jminutaKrajStateChanged
        keepTimePositive();
    }//GEN-LAST:event_jminutaKrajStateChanged

    private void jTextTroskoviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextTroskoviActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextTroskoviActionPerformed

    private void applayFilters(){
        sorter.setRowFilter(RowFilter.andFilter(getFilters()));
    }
    private void jRazlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRazlogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRazlogActionPerformed

    private void jSredstvoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSredstvoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSredstvoActionPerformed

    private boolean tableModelContaintsOvca(DefaultTableModel model, Ovca o){
        for (int i=0; i<model.getRowCount(); i++){
            if (model.getValueAt(i, 6)== o.getId()){
                return true;
            }
        }
        return false;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int selectedRow = jList.getSelectedRow();
        if (selectedRow>=0){
                Ovca o = (Ovca) jList.getValueAt(selectedRow, 0);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                if (!tableModelContaintsOvca(model, o)){
                     model.addRow(vector2From(o));
                }
        }
       jCounter.setText("("+ jTable1.getRowCount() + ")");
    }//GEN-LAST:event_jButton3ActionPerformed


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int selectedRow = jTable1.getSelectedRow(); 
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        if (selectedRow>=0 && selectedRow<model.getRowCount()){
           model.removeRow(selectedRow);
           jCounter.setText("("+ jTable1.getRowCount() + ")");
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jSelekcijaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSelekcijaKeyReleased
       applayFilters();    
       DefaultTableModel model = (DefaultTableModel) jList.getModel();
       if (model.getRowCount()>0){
           jList.setRowSelectionInterval(0, 0);
       }
    }//GEN-LAST:event_jSelekcijaKeyReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        jCounter.setText("("+ jTable1.getRowCount() + ")");

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (Ovca o : logic.getSvaZivaGrla()){
            model.addRow(vector2From(o));
        }
        jCounter.setText("("+ jTable1.getRowCount() + ")");
    }//GEN-LAST:event_jButton6ActionPerformed


    private String createBilans(){
        int komada = jTable1.getRowCount();
        StringBuilder sb = new StringBuilder();
            sb.append("Razlog ");
        sb.append(jRazlog.getText());
        sb.append(" ").append(Ovca.mnozinaGro(komada)).append(", lek: ");
        sb.append(jSredstvo.getText());
        return sb.toString();
        
    }
    private Vector vector2From(Ovca o){
        Vector v = new Vector(); 
        v.add(o.getNadimak());
        v.add(o.getOznaka());
        v.add(o.getPol());
        v.add(o.getStarost());
        v.add(null);    
        v.add(o.getAktuelno());
        v.add(o.getId());
        return v;
    }
    private Vector vectorFrom(Ovca o){
        Vector v = new Vector(); 
        v.add(o);
        return v;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jColorLabel;
    private javax.swing.JLabel jCounter;
    private com.toedter.calendar.JDateChooser jDatum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTable jList;
    private javax.swing.JTextField jLokacija;
    private javax.swing.JLabel jNameOfActivity;
    private javax.swing.JTextArea jNapomena;
    private javax.swing.JTextField jRazlog;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jSelekcija;
    private javax.swing.JButton jSnimiButton;
    private javax.swing.JTextField jSredstvo;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextTroskovi;
    private javax.swing.JSpinner jminutaKraj;
    private javax.swing.JSpinner jminutaPocetak;
    private javax.swing.ButtonGroup jredovno;
    private javax.swing.JSpinner jsatiKraj;
    private javax.swing.JSpinner jsatiPocetak;
    private javax.swing.JPanel nabavkaPanel;
    // End of variables declaration//GEN-END:variables


}
